{"ast":null,"code":"import _toConsumableArray from \"/home/vytautas/react-projects/matched-betting/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this;\n\nimport React from \"react\";\n\nvar UpdateAcca = function UpdateAcca() {\n  var acca = _this.state.acca;\n  var totalBackOdds = acca.reduce(function (total, leg) {\n    return Number(((leg.backOdds || 1) * total).toFixed(3));\n  }, 1);\n  var lastLegLay = Number((_this.state.backStake * totalBackOdds / (acca[acca.length - 1].layOdds - acca[acca.length - 1].commision / 100)).toFixed(2));\n  var newAcca = acca.reduceRight(function (newAcca, leg, ind, array) {\n    var prevLeg = array[ind + 1];\n    var prevStake = newAcca[array.length - ind - 2];\n\n    if (leg == array[array.length - 1]) {\n      return newAcca.concat(lastLegLay);\n    } else {\n      return newAcca.concat(Math.floor(prevStake * (1 - prevLeg.commision / 100) / (leg.layOdds - leg.commision / 100) * 100) / 100);\n    }\n  }, []).reverse();\n\n  _this.setState({\n    totalBackOdds: totalBackOdds,\n    acca: _toConsumableArray(_this.state.acca).map(function (leg, index) {\n      return Object.assign(leg, {\n        layStake: newAcca[index]\n      });\n    })\n  });\n};\n\nexport default UpdateAcca;","map":{"version":3,"sources":["/home/vytautas/react-projects/matched-betting/src/UpdateAcca.js"],"names":["React","UpdateAcca","acca","state","totalBackOdds","reduce","total","leg","Number","backOdds","toFixed","lastLegLay","backStake","length","layOdds","commision","newAcca","reduceRight","ind","array","prevLeg","prevStake","concat","Math","floor","reverse","setState","map","index","Object","assign","layStake"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMC,IAAI,GAAG,KAAI,CAACC,KAAL,CAAWD,IAAxB;AACA,MAAME,aAAa,GAAGF,IAAI,CAACG,MAAL,CAAY,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC9C,WAAOC,MAAM,CAAC,CAAC,CAACD,GAAG,CAACE,QAAJ,IAAgB,CAAjB,IAAsBH,KAAvB,EAA8BI,OAA9B,CAAsC,CAAtC,CAAD,CAAb;AACC,GAFiB,EAEf,CAFe,CAAtB;AAGA,MAAMC,UAAU,GAAGH,MAAM,CAAC,CAAE,KAAI,CAACL,KAAL,CAAWS,SAAX,GAAuBR,aAAxB,IACtBF,IAAI,CAACA,IAAI,CAACW,MAAL,GAAc,CAAf,CAAJ,CAAsBC,OAAtB,GACAZ,IAAI,CAACA,IAAI,CAACW,MAAL,GAAc,CAAf,CAAJ,CAAsBE,SAAtB,GAAkC,GAFZ,CAAD,EAEoBL,OAFpB,CAE4B,CAF5B,CAAD,CAAzB;AAIA,MAAMM,OAAO,GAAGd,IAAI,CAACe,WAAL,CACZ,UAACD,OAAD,EAAUT,GAAV,EAAeW,GAAf,EAAoBC,KAApB,EAA8B;AAC1B,QAAIC,OAAO,GAAGD,KAAK,CAACD,GAAG,GAAG,CAAP,CAAnB;AACA,QAAIG,SAAS,GAAGL,OAAO,CAACG,KAAK,CAACN,MAAN,GAAeK,GAAf,GAAqB,CAAtB,CAAvB;;AACA,QAAIX,GAAG,IAAIY,KAAK,CAACA,KAAK,CAACN,MAAN,GAAe,CAAhB,CAAhB,EAAoC;AAChC,aAAOG,OAAO,CAACM,MAAR,CAAeX,UAAf,CAAP;AACH,KAFD,MAEO;AACH,aAAOK,OAAO,CAACM,MAAR,CACHC,IAAI,CAACC,KAAL,CAAWH,SAAS,IAAI,IAAKD,OAAO,CAACL,SAAR,GAAoB,GAA7B,CAAT,IACVR,GAAG,CAACO,OAAJ,GAAeP,GAAG,CAACQ,SAAJ,GAAgB,GADrB,IAC6B,GADxC,IAC+C,GAF5C,CAAP;AAIH;AACJ,GAZW,EAYT,EAZS,EAadU,OAbc,EAAhB;;AAeA,EAAA,KAAI,CAACC,QAAL,CAAc;AACVtB,IAAAA,aAAa,EAAEA,aADL;AAEVF,IAAAA,IAAI,EAAE,mBAAI,KAAI,CAACC,KAAL,CAAWD,IAAf,EAAqByB,GAArB,CAAyB,UAACpB,GAAD,EAAMqB,KAAN,EAAgB;AAC3C,aAAOC,MAAM,CAACC,MAAP,CAAcvB,GAAd,EAAmB;AAACwB,QAAAA,QAAQ,EAAEf,OAAO,CAACY,KAAD;AAAlB,OAAnB,CAAP;AACH,KAFK;AAFI,GAAd;AAMH,CA9BD;;AAgCA,eAAe3B,UAAf","sourcesContent":["import React from \"react\";\n\nconst UpdateAcca = () => {\n    const acca = this.state.acca;\n    const totalBackOdds = acca.reduce((total, leg) => {\n        return Number(((leg.backOdds || 1) * total).toFixed(3));\n        }, 1);\n    const lastLegLay = Number(((this.state.backStake * totalBackOdds) /\n        (acca[acca.length - 1].layOdds -\n        (acca[acca.length - 1].commision / 100))).toFixed(2));\n    \n    const newAcca = acca.reduceRight(\n        (newAcca, leg, ind, array) => {\n            let prevLeg = array[ind + 1];\n            let prevStake = newAcca[array.length - ind - 2];\n            if (leg == array[array.length - 1]) {\n                return newAcca.concat(lastLegLay)\n            } else {\n                return newAcca.concat(\n                    Math.floor(prevStake * (1 - (prevLeg.commision / 100)) /\n                    (leg.layOdds - (leg.commision / 100)) * 100) / 100\n                )\n            }\n        }, []\n    ).reverse();\n\n    this.setState({\n        totalBackOdds: totalBackOdds,\n        acca: [...this.state.acca].map((leg, index) => {\n            return Object.assign(leg, {layStake: newAcca[index]})\n        })\n    })\n}\n\nexport default UpdateAcca;"]},"metadata":{},"sourceType":"module"}